{"version":3,"sources":["components/OneBrewery.js","components/OneBeer.js","components/Brewery.js","components/Brewerysexample.js","components/Header.js","components/Beer.js","components/Beersexample.js","App.js","serviceWorker.js","index.js"],"names":["require","OneBrewery","props","performSearch","setState","state","isLoading","axios","get","process","then","res","brewery","data","console","log","catch","err","thisId","this","Array","isArray","className","map","onebrewery","key","id","name","locality","locationType","region","React","Component","OneBeer","beer","isOrganic","description","Brewery","to","breweryId","nameShortDisplay","Brewerysexample","brewerys","pagination","currentPage","itemsPerPage","total","totalResults","jsUcfirst","str","charAt","toUpperCase","slice","onSearchChange","e","searchText","target","value","term","handleSubmit","preventDefault","query","currentTarget","reset","onSubmit","onChange","type","ref","input","placeholder","aria-label","aria-hidden","filter","x","includes","searchingFor","linkStyle","color","textDecoration","marginRight","marginLeft","headerStyle","background","textAlign","padding","Header","style","src","alt","Beer","beerId","Beersexample","App","exact","path","component","render","request","match","params","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6c20606b.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from 'axios';\nrequire('dotenv');\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nclass OneBrewery extends React.Component {\n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        brewery: [],\n        thisId: '',\n        isLoading: true\n      };\n    }\n\n    \n    performSearch = () => {\n        this.setState(state => ({ ...state, isLoading: true }));\n    \n        axios\n          .get(\n            `${process.env.REACT_APP_CORS_PROXY_URL}https://sandbox-api.brewerydb.com/v2/brewery/q6vJUK/locations/?key=${API_KEY}`)\n          .then(res => {\n            const brewery = res.data.data;\n            console.log(brewery);\n            this.setState({\n              brewery: brewery,\n\n              isLoading: false,\n         \n            });\n    \n          })\n          .catch(err => console.log(err));\n      };\n\n\n    componentDidMount() {\n      this.performSearch();\n      }\n\n    render() {\n    \n        const { brewery } = this.state;\n        console.log(this.state.brewery);\n        console.log(this.state.thisId);\n        if (Array.isArray(this.state.brewery)) {\n\n        return (\n\n      \n    <div className=\"container\">\n      <ul className=\"ulist\">\n      {this.state.brewery.map(onebrewery => (\n        <li className=\"list-item\"\n         key={onebrewery.id}>\n          <h2>\n            Brewery Name: {' '}</h2>\n           <h4> {onebrewery.name ? onebrewery.name : \"No name available\"}</h4>\n        \n          <h3>\n            City: {' '}  </h3>\n          <h4>  {onebrewery.locality\n              ? onebrewery.locality\n              : \"No Locality available\"}</h4>\n         \n\n          <h4>\n            Type: {' '} </h4>\n        <h5>    {onebrewery.locationType\n              ? onebrewery.locationType\n              : \"No type\"}</h5>\n         \n          <p>\n            Region: {' '}\n            {onebrewery.region ? onebrewery.region : \"Without Region\"}\n          </p>\n        </li>\n              ))}\n      </ul>\n\n    </div>\n        );\n        }\n          \n    }\n}\n\nexport default OneBrewery;\n","import React from \"react\";\nimport axios from 'axios';\nrequire('dotenv');\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nclass OneBeer extends React.Component {\n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        beer: [],\n        isLoading: true\n      };\n    }\n\n    \n    performSearch = () => {\n        this.setState(state => ({ ...state, isLoading: true }));\n    \n        axios\n          .get(\n            `${process.env.REACT_APP_CORS_PROXY_URL}https://sandbox-api.brewerydb.com/v2/beer/${this.props.id}/?key=${API_KEY}`)\n          .then(res => {\n            const beer = res.data.data;\n            console.log(beer);\n            this.setState({\n              beer: beer,\n\n              isLoading: false,\n         \n            });\n    \n          })\n          .catch(err => console.log(err));\n      };\n\n\n    componentDidMount() {\n      this.performSearch();\n      }\n\n    render() {\n    \n        const { beer } = this.state;\n        console.log(beer);\n\n        return (\n            <div className=\"container\">\n            <ul className=\"ulist\">\n              <li className=\"list-item\"\n               key={this.state.beer.id}>\n                <h2>\n                  Name: {' '}\n                  {beer.name ? beer.name : \"No name available\"}\n                </h2>\n              <h6>\n                  Organic: {' '}\n                  {beer.isOrganic ? beer.isOrganic : \"No Organicx available\"}\n              </h6>\n                <p>\n                Description: {' '}\n                  {beer.description ? beer.description : \"No description available\"}\n                </p>\n          \n              </li>\n            </ul>\n            \n          </div>\n        );\n    }\n}\n\nexport default OneBeer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Brewery = (props) => {\n\n  return (\n  \n    <div className=\"container\">\n      <ul className=\"ulist\">\n      <Link className=\"list-item linkz\" id={props.brewery.id} to={`/brewery/${props.brewery.id}`}\n         key={props.brewery.id}>\n  {console.log(props.brewery.breweryId)}\n  {console.log('just props', props.id)}\n          <h2>\n            Beer: {' '}\n            {props.brewery.brewery.nameShortDisplay ? props.brewery.brewery.nameShortDisplay : \"No name available\"}\n          </h2>\n          <h3>\n            City: {' '}\n            {props.brewery.locality\n              ? props.brewery.locality\n              : \"No Locality available\"}\n          </h3>\n\n          <h4>\n            Type: {' '}\n            {props.brewery.locationType\n              ? props.brewery.locationType\n              : \"No type\"}\n          </h4>\n          <p>\n            Region: {' '}\n            {props.brewery.region ? props.brewery.region : \"Without region\"}\n          </p>\n        </Link>\n      </ul>\n      \n    </div>\n  );\n}\n\nexport default Brewery;\n","import React, { Component } from 'react'\nimport Brewery from './Brewery';\n// import SearchByName from \"./SearchByName\";\n// import Pagination from './Pagination'\nimport axios from 'axios';\nrequire('dotenv');\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nfunction searchingFor(term) {\n  return function(x) {\n    return x.locality.includes(term) || !term;\n  }\n}\n\n\nclass Brewerysexample extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchText: '',\n      brewerys: [],\n      isLoading: true,\n      pagination: {\n        total: 0,\n        currentPage: 1,\n        itemsPerPage: 25\n      }\n    };\n  }\n\n  performSearch = () => {\n    this.setState(state => ({ ...state, isLoading: true }));\n\n    axios\n      .get(\n        `${process.env.REACT_APP_CORS_PROXY_URL}https://sandbox-api.brewerydb.com/v2/locations/?key=${API_KEY}`)\n      .then(res => {\n        const brewerys = res.data.data;\n        this.setState({\n          brewerys: brewerys,\n          isLoading: false,\n          pagination: {\n            currentPage: res.data.currentPage,\n            itemsPerPage: this.state.pagination.itemsPerPage,\n            total: res.data.totalResults\n          }\n        });\n\n      })\n      .catch(err => console.log(err));\n  };\n\n\n jsUcfirst = str => {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n  componentDidMount() {\n    this.performSearch();\n}\n\nonSearchChange = e => {\n  this.setState({\n    searchText: this.jsUcfirst(e.target.value),\n    term: this.jsUcfirst(e.target.value)\n  });\n};\n\nhandleSubmit = e => {\n  e.preventDefault();\n  this.performSearch(this.query.value);\n  e.currentTarget.reset();\n  this.setState({ searchText: \"\" });\n};\n\n\n  render() {\n\n    const {brewerys, isLoading, term} = this.state;\n\n    console.log(brewerys);\n    console.log(this.state.pagination);\n    console.log(this.state.searchText);\n    console.log(term);\n      if (Array.isArray(brewerys)) {\n      return (\n        <div className=\"byCity\">\n          <div className=\"byCitysearch\">\n        <form className=\"search-form\" onSubmit={this.handleSubmit}>\n          <div className=\"active-cyan-3 active-cyan-4 mb-4 mt-4\">\n            <input\n              className=\"form-control\"\n              onChange={this.onSearchChange}\n              type=\"text\"\n              ref={input => (this.query = input)}\n              placeholder=\"Search By Name\"\n              aria-label=\"Search\"\n            />\n          </div>\n\n          <button\n            type=\"submit\"\n            id=\"submit\"\n            className=\"input-group-text cyan lighten-2\">\n            <i className=\"fa fa-fw fa-search text-dark\" aria-hidden=\"true\"></i>\n          </button>\n        </form>\n\n          {\n          isLoading ? <p>Loading</p> :\n        brewerys.filter(searchingFor(term)).map((brewery) => (\n          \n          <Brewery key={brewery.id} id={brewery.breweryId} brewery={brewery} />\n    \n          \n        ))\n         }\n\n   \n      </div>\n\n      \n          {/* <Pagination\n            className={this.state.isLoading ? \" hidden\" : \"\"}\n            total={this.state.pagination.total}\n            current={this.state.pagination.currentPage}\n            onChange={this.paginate}\n            pageSize={this.state.pagination.itemsPerPage}\n          /> */}\n\n          \n\n          {/* {isLoading ? <p>Loading</p> :\n\n\n         brewerys.map(beer => (\n      \n         <Beer key={beer.id} beer={beer} />\n         ))\n                  \n         } */}\n\n          {/* <Pagination\n            className={this.state.isLoading ? \" hidden\" : \"\"}\n            total={this.state.pagination.total}\n            current={this.state.pagination.currentPage}\n            onChange={this.paginate}\n            pageSize={this.state.pagination.itemsPerPage}\n          /> */}\n\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          {/* <SearchByName onSearch={this.performSearch} /> */}\n    \n\n          <p>Loading...</p>\n\n\n   \n        </div>\n      );\n    }\n  }\n\n}\n\nexport default Brewerysexample;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './Header.css';\n\nconst Header =() => {\n  return (\n    <div>\n      <header className=\"header\" style={headerStyle}>\n       <img src=\"https://images.pexels.com/photos/1267703/pexels-photo-1267703.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\" className=\"img\" alt=\"\" />\n        <Link className=\"link\" style={linkStyle} to=\"/\">\n        {\" \"} Home {\" \"}\n        </Link>\n        <Link className=\"link\" style={linkStyle} to=\"/beers\">\n        {\" \"}    By Name\n        </Link>{\" \"}\n        \n        <Link style={linkStyle} className=\"link\" to=\"/location\">\n        {\" \"}     By location {\" \"}\n        </Link>\n      </header>\n\n      <div className=\"footer-bottom\">\n     \n          <p className=\"text-center\"> 2020 Copyright © Beers </p>\n       \n      </div>\n    </div>\n  );\n}\n\nconst linkStyle = {\n  color: \"#fff\",\n  textDecoration: \"none\",\n  marginRight: \"20px\",\n  marginLeft: \"20px\"\n};\n\nconst headerStyle = {\n  background: \"#333\",\n  color: \"#fff\",\n  textAlign: \"center\",\n  padding: \"10px\"\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Beer = (props) => {\n  return (\n    <div className=\"container\">\n      <ul className=\"ulist\">\n      <Link className=\"list-item linkz\" id={props.beer.id} to={`/beer/${props.beer.id}`}\n         key={props.beer.id}>\n            {console.log('props id', props.beer.beerId)}\n            {console.log('just id', props.beer.id)}\n          <h2>\n            Name: {' '}\n            {props.beer.name ? props.beer.name : \"No name available\"}\n          </h2>\n    \n        </Link>\n      </ul>\n      \n    </div>\n  );\n}\n\nexport default Beer;\n","import React, { Component } from 'react'\nimport Beer from './Beer';\n// import SearchByName from \"./SearchByName\";\n// import Pagination from './Pagination'\nimport axios from 'axios';\nrequire('dotenv');\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nfunction searchingFor(term) {\n  return function(x) {\n    return x.name.includes(term) || !term;\n  }\n}\n\n\nclass Beersexample extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchText: '',\n      brewerys: [],\n      isLoading: true,\n      pagination: {\n        total: 0,\n        currentPage: 1,\n        itemsPerPage: 15\n      }\n    };\n  }\n\n\n  performSearch = () => {\n    this.setState(state => ({ ...state, isLoading: true }));\n\n    axios\n      .get(\n        `${process.env.REACT_APP_CORS_PROXY_URL}https://sandbox-api.brewerydb.com/v2/beers/?key=${API_KEY}`)\n      .then(res => {\n        const brewerys = res.data.data;\n        this.setState({\n          brewerys: brewerys,\n          isLoading: false,\n          pagination: {\n            currentPage: res.data.currentPage,\n            itemsPerPage: this.state.pagination.itemsPerPage,\n            total: res.data.totalResults\n          }\n        });\n\n      })\n      .catch(err => console.log(err));\n  };\n\n  \n  // paginate = (page, itemsPerPage) => {\n  //   this.setState(\n  //     state => {\n  //       state.pagination.currentPage = page;\n  //       state.pagination.itemsPerPage = itemsPerPage;\n\n  //       return state;\n  //     },\n  //     () => {\n  //       this.performSearch();\n  //     }\n  //   );\n  // };\n\n// paginate = (page, itemsPerPage) => {\n//     this.setState(state => ({ ...state, isLoading: true }));\n\n//     // const {itemsPerPage} = this.state.pagination.itemsPerPage;\n\n//     axios\n//       .get(\n//         `${process.env.REACT_APP_CORS_PROXY_URL}https://sandbox-api.brewerydb.com/v2/beers/?key=${API_KEY}&p=${this.state.pagination.itemsPerPage}`\n//       )\n//       .then(res => {\n//         const brewerys = res.data.data;\n//         console.log(brewerys);\n//         console.log(this.state.pagination.currentPage);\n//         console.log(this.state.pagination.itemsPerPage);\n//         console.log(itemsPerPage);\n//         this.setState({\n//           brewerys: brewerys,\n//           isLoading: false,\n//           pagination: {\n//             currentPage: page,\n//             itemsPerPage: res.data.itemsPerPage,\n//             total: res.data.totalResults\n//           }\n//         });\n//       })\n//       .catch(err => console.log(err));\n//   };\n\n  componentDidMount() {\n    this.performSearch();\n}\n\nonSearchChange = e => {\n  this.setState({\n    searchText: e.target.value,\n    term: e.target.value\n  });\n};\n\nhandleSubmit = e => {\n  e.preventDefault();\n  this.performSearch(this.query.value);\n  e.currentTarget.reset();\n  this.setState({ searchText: \"\" });\n};\n\n\n  render() {\n\n    const {brewerys, isLoading, term} = this.state;\n\n    console.log(brewerys);\n    console.log(this.state.pagination);\n    console.log(this.state.searchText);\n    console.log(term);\n      if (Array.isArray(brewerys)) {\n      return (\n        <div className=\"byCity\">\n          <div className=\"byCitysearch\">\n        <form className=\"search-form\" onSubmit={this.handleSubmit}>\n          <div className=\"active-cyan-3 active-cyan-4 mb-4 mt-4\">\n            <input\n              className=\"form-control\"\n              onChange={this.onSearchChange}\n              type=\"text\"\n              ref={input => (this.query = input)}\n              placeholder=\"Search By Name\"\n              aria-label=\"Search\"\n            />\n          </div>\n\n          <button\n            type=\"submit\"\n            id=\"submit\"\n            className=\"input-group-text cyan lighten-2\">\n            <i className=\"fa fa-fw fa-search text-dark\" aria-hidden=\"true\"></i>\n          </button>\n        </form>\n\n          {\n          isLoading ? <p>Loading</p> :\n        brewerys.filter(searchingFor(term)).map((beer) => (\n          <Beer key={beer.id} beer={beer} />\n        ))\n         }\n\n   \n      </div>\n\n      \n          {/* <Pagination\n            className={this.state.isLoading ? \" hidden\" : \"\"}\n            total={this.state.pagination.total}\n            current={this.state.pagination.currentPage}\n            onChange={this.paginate}\n            pageSize={this.state.pagination.itemsPerPage}\n          /> */}\n\n          \n\n          {/* {isLoading ? <p>Loading</p> :\n\n\n         brewerys.map(beer => (\n      \n         <Beer key={beer.id} beer={beer} />\n         ))\n                  \n         } */}\n\n          {/* <Pagination\n            className={this.state.isLoading ? \" hidden\" : \"\"}\n            total={this.state.pagination.total}\n            current={this.state.pagination.currentPage}\n            onChange={this.paginate}\n            pageSize={this.state.pagination.itemsPerPage}\n          /> */}\n\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          {/* <SearchByName onSearch={this.performSearch} /> */}\n    \n\n          <p>Loading...</p>\n\n\n   \n        </div>\n      );\n    }\n  }\n\n}\n\nexport default Beersexample;","import React, { Component } from \"react\";\nimport OneBrewery from \"./components/OneBrewery\";\nimport OneBeer from \"./components/OneBeer\";\nimport Brewerysexample from \"./components/Brewerysexample\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Beersexample from './components/Beersexample';\nimport \"./App.css\";\n\nclass App extends Component {\n\n\n\n\n  render() {\n\n    return (\n      <Router>\n        <div className=\"the-app\">\n          <Header />\n      \n          <Switch>\n\n          <Route exact path=\"/\" />\n\n   <Route exact path=\"/beers\" component={Beersexample} />\n<Route exact path=\"/location\" component={Brewerysexample} />\n{/* <Route exact path=\"/brewery/:id\" component={OneBrewery} /> */}\n<Route\n        path=\"/brewery/:id\" \n        render={request => {\n          const id = request.match.params.id;\n          console.log(id);\n          return <OneBrewery id={id} />;\n        }}\n      />\n\n<Route \n        path=\"/beer/:id\" \n        render={request => {\n          const id = request.match.params.id;\n          console.log(id);\n          return <OneBeer id={id} />;\n        }}\n      />\n\n    \n          </Switch>\n\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}